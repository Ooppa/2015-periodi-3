/*
 * Aineopintojen harjoitustyö: Tietorakenteet ja algoritmit
 * Helsingin yliopisto Tietojenkäsittelytieteen laitos
 * Ooppa 2015 - GNU General Public License, version 3.
 */
package application;

import domain.RecommendedItem;
import domain.User;
import generators.TestDataGenerator;
import java.util.ArrayList;
import java.util.HashMap;

/**
 * Example of the algorithm in action
 *
 * @author Ooppa
 */
public class Example {

    private final TestDataGenerator data;
    private final ArrayList<RecommendedItem> recommendedItems;

    /**
     * Creates a new Example to be used to try out the algorithm
     */
    public Example() {
        System.out.println("----------------- STARTING ------------------");
        
        // Start by generating the test data.
        data = new TestDataGenerator(true, 400);

        // Create algorithm object
        Algorithm algorithm = new Algorithm();

        HashMap<Long, User> users = data.getUsers();
        User user = users.get(2000L);

        users.remove(user.getId());

        System.out.println("----------------- ALGORITHM ------------------");

        // This generates a list of items recommended for the User given as parameter
        recommendedItems = algorithm.recommendItems(user, users, data.getItems());

        System.out.println("---------------- TOP 10 ITEMS ----------------");

        // If over 10 RecommendedItems in list
        if(recommendedItems.size()>10) {
            
            // Print the Top-10 list as a showcase for the algorithm
            for(int i = 0; i<10; i++) {
                System.out.println(recommendedItems.get(i));
                
                ArrayList<RecommendedItem> similarItems = algorithm.similarItems(recommendedItems.get(i).getItem(), data.getItems());
                
                // Print the top 5 most similar items to this top-10 list item
                for(int j = 0; j<5; j++) {
                    System.out.println("\t"+ similarItems.get(j));
                }
                
            }
        } else {
            // Can't print the top 10 if we have less than 10 items
            System.out.println("Less than 10 recommended items were found.");
        }
    }

    /**
     * Returns the data generated for the Example
     *
     * @return the data generated by TestDataGenerator
     */
    public TestDataGenerator getData() {
        return data;
    }

}
